// Code generated by qxgen; DO NOT EDIT.
package tables

import (
	"github.com/bokwoon95/qx-postgres/qx"
)

type TABLE_APPLICATIONS struct {
	*qx.TableInfo
	APNID         qx.NumberField
	COHORT        qx.StringField
	CREATED_AT    qx.TimeField
	CREATOR       qx.NumberField
	DATA          qx.JSONField
	DELETED_AT    qx.TimeField
	MAGICSTRING   qx.StringField
	PROJECT_IDEA  qx.StringField
	PROJECT_LEVEL qx.StringField
	SCHEMA        qx.NumberField
	STATUS        qx.StringField
	SUBMITTED     qx.BooleanField
	TEAM          qx.NumberField
	TEAM_NAME     qx.StringField
	UPDATED_AT    qx.TimeField
}

func APPLICATIONS() TABLE_APPLICATIONS {
	tbl := TABLE_APPLICATIONS{TableInfo: qx.NewTableInfo("public", "applications")}
	tbl.APNID = qx.NewNumberField("apnid", tbl.TableInfo)
	tbl.COHORT = qx.NewStringField("cohort", tbl.TableInfo)
	tbl.CREATED_AT = qx.NewTimeField("created_at", tbl.TableInfo)
	tbl.CREATOR = qx.NewNumberField("creator", tbl.TableInfo)
	tbl.DATA = qx.NewJSONField("data", tbl.TableInfo)
	tbl.DELETED_AT = qx.NewTimeField("deleted_at", tbl.TableInfo)
	tbl.MAGICSTRING = qx.NewStringField("magicstring", tbl.TableInfo)
	tbl.PROJECT_IDEA = qx.NewStringField("project_idea", tbl.TableInfo)
	tbl.PROJECT_LEVEL = qx.NewStringField("project_level", tbl.TableInfo)
	tbl.SCHEMA = qx.NewNumberField("schema", tbl.TableInfo)
	tbl.STATUS = qx.NewStringField("status", tbl.TableInfo)
	tbl.SUBMITTED = qx.NewBooleanField("submitted", tbl.TableInfo)
	tbl.TEAM = qx.NewNumberField("team", tbl.TableInfo)
	tbl.TEAM_NAME = qx.NewStringField("team_name", tbl.TableInfo)
	tbl.UPDATED_AT = qx.NewTimeField("updated_at", tbl.TableInfo)
	return tbl
}

func (tbl TABLE_APPLICATIONS) As(alias string) TABLE_APPLICATIONS {
	tbl2 := APPLICATIONS()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type TABLE_APPLICATIONS_STATUS_ENUM struct {
	*qx.TableInfo
	STATUS qx.StringField
}

func APPLICATIONS_STATUS_ENUM() TABLE_APPLICATIONS_STATUS_ENUM {
	tbl := TABLE_APPLICATIONS_STATUS_ENUM{TableInfo: qx.NewTableInfo("public", "applications_status_enum")}
	tbl.STATUS = qx.NewStringField("status", tbl.TableInfo)
	return tbl
}

func (tbl TABLE_APPLICATIONS_STATUS_ENUM) As(alias string) TABLE_APPLICATIONS_STATUS_ENUM {
	tbl2 := APPLICATIONS_STATUS_ENUM()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type TABLE_COHORT_ENUM struct {
	*qx.TableInfo
	COHORT          qx.StringField
	INSERTION_ORDER qx.NumberField
}

func COHORT_ENUM() TABLE_COHORT_ENUM {
	tbl := TABLE_COHORT_ENUM{TableInfo: qx.NewTableInfo("public", "cohort_enum")}
	tbl.COHORT = qx.NewStringField("cohort", tbl.TableInfo)
	tbl.INSERTION_ORDER = qx.NewNumberField("insertion_order", tbl.TableInfo)
	return tbl
}

func (tbl TABLE_COHORT_ENUM) As(alias string) TABLE_COHORT_ENUM {
	tbl2 := COHORT_ENUM()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type TABLE_FORM_SCHEMA struct {
	*qx.TableInfo
	CREATED_AT qx.TimeField
	DATA       qx.JSONField
	DELETED_AT qx.TimeField
	FSID       qx.NumberField
	NAME       qx.StringField
	PERIOD     qx.NumberField
	SUBSECTION qx.StringField
	UPDATED_AT qx.TimeField
}

func FORM_SCHEMA() TABLE_FORM_SCHEMA {
	tbl := TABLE_FORM_SCHEMA{TableInfo: qx.NewTableInfo("public", "form_schema")}
	tbl.CREATED_AT = qx.NewTimeField("created_at", tbl.TableInfo)
	tbl.DATA = qx.NewJSONField("data", tbl.TableInfo)
	tbl.DELETED_AT = qx.NewTimeField("deleted_at", tbl.TableInfo)
	tbl.FSID = qx.NewNumberField("fsid", tbl.TableInfo)
	tbl.NAME = qx.NewStringField("name", tbl.TableInfo)
	tbl.PERIOD = qx.NewNumberField("period", tbl.TableInfo)
	tbl.SUBSECTION = qx.NewStringField("subsection", tbl.TableInfo)
	tbl.UPDATED_AT = qx.NewTimeField("updated_at", tbl.TableInfo)
	return tbl
}

func (tbl TABLE_FORM_SCHEMA) As(alias string) TABLE_FORM_SCHEMA {
	tbl2 := FORM_SCHEMA()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type TABLE_FORM_SCHEMA_ROLES struct {
	*qx.TableInfo
	FSRID  qx.NumberField
	ROLE   qx.StringField
	SCHEMA qx.NumberField
}

func FORM_SCHEMA_ROLES() TABLE_FORM_SCHEMA_ROLES {
	tbl := TABLE_FORM_SCHEMA_ROLES{TableInfo: qx.NewTableInfo("public", "form_schema_roles")}
	tbl.FSRID = qx.NewNumberField("fsrid", tbl.TableInfo)
	tbl.ROLE = qx.NewStringField("role", tbl.TableInfo)
	tbl.SCHEMA = qx.NewNumberField("schema", tbl.TableInfo)
	return tbl
}

func (tbl TABLE_FORM_SCHEMA_ROLES) As(alias string) TABLE_FORM_SCHEMA_ROLES {
	tbl2 := FORM_SCHEMA_ROLES()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type TABLE_MEDIA struct {
	*qx.TableInfo
	CREATED_AT  qx.TimeField
	DELETED_AT  qx.TimeField
	DESCRIPTION qx.StringField
	NAME        qx.StringField
	TYPE        qx.StringField
	UPDATED_AT  qx.TimeField
}

func MEDIA() TABLE_MEDIA {
	tbl := TABLE_MEDIA{TableInfo: qx.NewTableInfo("public", "media")}
	tbl.CREATED_AT = qx.NewTimeField("created_at", tbl.TableInfo)
	tbl.DELETED_AT = qx.NewTimeField("deleted_at", tbl.TableInfo)
	tbl.DESCRIPTION = qx.NewStringField("description", tbl.TableInfo)
	tbl.NAME = qx.NewStringField("name", tbl.TableInfo)
	tbl.TYPE = qx.NewStringField("type", tbl.TableInfo)
	tbl.UPDATED_AT = qx.NewTimeField("updated_at", tbl.TableInfo)
	return tbl
}

func (tbl TABLE_MEDIA) As(alias string) TABLE_MEDIA {
	tbl2 := MEDIA()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type TABLE_MILESTONE_ENUM struct {
	*qx.TableInfo
	MILESTONE qx.StringField
}

func MILESTONE_ENUM() TABLE_MILESTONE_ENUM {
	tbl := TABLE_MILESTONE_ENUM{TableInfo: qx.NewTableInfo("public", "milestone_enum")}
	tbl.MILESTONE = qx.NewStringField("milestone", tbl.TableInfo)
	return tbl
}

func (tbl TABLE_MILESTONE_ENUM) As(alias string) TABLE_MILESTONE_ENUM {
	tbl2 := MILESTONE_ENUM()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type TABLE_MIME_TYPE_ENUM struct {
	*qx.TableInfo
	TYPE qx.StringField
}

func MIME_TYPE_ENUM() TABLE_MIME_TYPE_ENUM {
	tbl := TABLE_MIME_TYPE_ENUM{TableInfo: qx.NewTableInfo("public", "mime_type_enum")}
	tbl.TYPE = qx.NewStringField("type", tbl.TableInfo)
	return tbl
}

func (tbl TABLE_MIME_TYPE_ENUM) As(alias string) TABLE_MIME_TYPE_ENUM {
	tbl2 := MIME_TYPE_ENUM()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type TABLE_PERIODS struct {
	*qx.TableInfo
	COHORT     qx.StringField
	CREATED_AT qx.TimeField
	DELETED_AT qx.TimeField
	END_AT     qx.TimeField
	MILESTONE  qx.StringField
	PID        qx.NumberField
	STAGE      qx.StringField
	START_AT   qx.TimeField
	UPDATED_AT qx.TimeField
}

func PERIODS() TABLE_PERIODS {
	tbl := TABLE_PERIODS{TableInfo: qx.NewTableInfo("public", "periods")}
	tbl.COHORT = qx.NewStringField("cohort", tbl.TableInfo)
	tbl.CREATED_AT = qx.NewTimeField("created_at", tbl.TableInfo)
	tbl.DELETED_AT = qx.NewTimeField("deleted_at", tbl.TableInfo)
	tbl.END_AT = qx.NewTimeField("end_at", tbl.TableInfo)
	tbl.MILESTONE = qx.NewStringField("milestone", tbl.TableInfo)
	tbl.PID = qx.NewNumberField("pid", tbl.TableInfo)
	tbl.STAGE = qx.NewStringField("stage", tbl.TableInfo)
	tbl.START_AT = qx.NewTimeField("start_at", tbl.TableInfo)
	tbl.UPDATED_AT = qx.NewTimeField("updated_at", tbl.TableInfo)
	return tbl
}

func (tbl TABLE_PERIODS) As(alias string) TABLE_PERIODS {
	tbl2 := PERIODS()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type TABLE_PROJECT_CATEGORY_ENUM struct {
	*qx.TableInfo
	PROJECT_CATEGORY qx.StringField
}

func PROJECT_CATEGORY_ENUM() TABLE_PROJECT_CATEGORY_ENUM {
	tbl := TABLE_PROJECT_CATEGORY_ENUM{TableInfo: qx.NewTableInfo("public", "project_category_enum")}
	tbl.PROJECT_CATEGORY = qx.NewStringField("project_category", tbl.TableInfo)
	return tbl
}

func (tbl TABLE_PROJECT_CATEGORY_ENUM) As(alias string) TABLE_PROJECT_CATEGORY_ENUM {
	tbl2 := PROJECT_CATEGORY_ENUM()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type TABLE_PROJECT_LEVEL_ENUM struct {
	*qx.TableInfo
	PROJECT_LEVEL qx.StringField
}

func PROJECT_LEVEL_ENUM() TABLE_PROJECT_LEVEL_ENUM {
	tbl := TABLE_PROJECT_LEVEL_ENUM{TableInfo: qx.NewTableInfo("public", "project_level_enum")}
	tbl.PROJECT_LEVEL = qx.NewStringField("project_level", tbl.TableInfo)
	return tbl
}

func (tbl TABLE_PROJECT_LEVEL_ENUM) As(alias string) TABLE_PROJECT_LEVEL_ENUM {
	tbl2 := PROJECT_LEVEL_ENUM()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type TABLE_ROLE_ENUM struct {
	*qx.TableInfo
	ROLE qx.StringField
}

func ROLE_ENUM() TABLE_ROLE_ENUM {
	tbl := TABLE_ROLE_ENUM{TableInfo: qx.NewTableInfo("public", "role_enum")}
	tbl.ROLE = qx.NewStringField("role", tbl.TableInfo)
	return tbl
}

func (tbl TABLE_ROLE_ENUM) As(alias string) TABLE_ROLE_ENUM {
	tbl2 := ROLE_ENUM()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type TABLE_ROLE_FORMS struct {
	*qx.TableInfo
	CREATED_AT    qx.TimeField
	DATA          qx.JSONField
	DELETED_AT    qx.TimeField
	OVERRIDE_OPEN qx.BooleanField
	RFID          qx.NumberField
	SCHEMA        qx.NumberField
	SUBMITTED     qx.BooleanField
	UPDATED_AT    qx.TimeField
	USER_ROLE     qx.NumberField
}

func ROLE_FORMS() TABLE_ROLE_FORMS {
	tbl := TABLE_ROLE_FORMS{TableInfo: qx.NewTableInfo("public", "role_forms")}
	tbl.CREATED_AT = qx.NewTimeField("created_at", tbl.TableInfo)
	tbl.DATA = qx.NewJSONField("data", tbl.TableInfo)
	tbl.DELETED_AT = qx.NewTimeField("deleted_at", tbl.TableInfo)
	tbl.OVERRIDE_OPEN = qx.NewBooleanField("override_open", tbl.TableInfo)
	tbl.RFID = qx.NewNumberField("rfid", tbl.TableInfo)
	tbl.SCHEMA = qx.NewNumberField("schema", tbl.TableInfo)
	tbl.SUBMITTED = qx.NewBooleanField("submitted", tbl.TableInfo)
	tbl.UPDATED_AT = qx.NewTimeField("updated_at", tbl.TableInfo)
	tbl.USER_ROLE = qx.NewNumberField("user_role", tbl.TableInfo)
	return tbl
}

func (tbl TABLE_ROLE_FORMS) As(alias string) TABLE_ROLE_FORMS {
	tbl2 := ROLE_FORMS()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type TABLE_SCHEMA_MIGRATIONS struct {
	*qx.TableInfo
	DIRTY   qx.BooleanField
	VERSION qx.NumberField
}

func SCHEMA_MIGRATIONS() TABLE_SCHEMA_MIGRATIONS {
	tbl := TABLE_SCHEMA_MIGRATIONS{TableInfo: qx.NewTableInfo("public", "schema_migrations")}
	tbl.DIRTY = qx.NewBooleanField("dirty", tbl.TableInfo)
	tbl.VERSION = qx.NewNumberField("version", tbl.TableInfo)
	return tbl
}

func (tbl TABLE_SCHEMA_MIGRATIONS) As(alias string) TABLE_SCHEMA_MIGRATIONS {
	tbl2 := SCHEMA_MIGRATIONS()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type TABLE_SESSIONS struct {
	*qx.TableInfo
	CREATED_AT qx.TimeField
	HASH       qx.StringField
	UID        qx.NumberField
}

func SESSIONS() TABLE_SESSIONS {
	tbl := TABLE_SESSIONS{TableInfo: qx.NewTableInfo("public", "sessions")}
	tbl.CREATED_AT = qx.NewTimeField("created_at", tbl.TableInfo)
	tbl.HASH = qx.NewStringField("hash", tbl.TableInfo)
	tbl.UID = qx.NewNumberField("uid", tbl.TableInfo)
	return tbl
}

func (tbl TABLE_SESSIONS) As(alias string) TABLE_SESSIONS {
	tbl2 := SESSIONS()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type TABLE_STAGE_ENUM struct {
	*qx.TableInfo
	STAGE qx.StringField
}

func STAGE_ENUM() TABLE_STAGE_ENUM {
	tbl := TABLE_STAGE_ENUM{TableInfo: qx.NewTableInfo("public", "stage_enum")}
	tbl.STAGE = qx.NewStringField("stage", tbl.TableInfo)
	return tbl
}

func (tbl TABLE_STAGE_ENUM) As(alias string) TABLE_STAGE_ENUM {
	tbl2 := STAGE_ENUM()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type TABLE_TEAM_EVALUATE_SUBMISSION struct {
	*qx.TableInfo
	CREATED_AT    qx.TimeField
	DATA          qx.JSONField
	DELETED_AT    qx.TimeField
	EVALUATEE     qx.NumberField
	EVALUATION    qx.NumberField
	EVALUATOR     qx.NumberField
	OVERRIDE_OPEN qx.BooleanField
	SCHEMA        qx.NumberField
	SUBMITTED     qx.BooleanField
	TESID         qx.NumberField
	UPDATED_AT    qx.TimeField
}

func TEAM_EVALUATE_SUBMISSION() TABLE_TEAM_EVALUATE_SUBMISSION {
	tbl := TABLE_TEAM_EVALUATE_SUBMISSION{TableInfo: qx.NewTableInfo("public", "team_evaluate_submission")}
	tbl.CREATED_AT = qx.NewTimeField("created_at", tbl.TableInfo)
	tbl.DATA = qx.NewJSONField("data", tbl.TableInfo)
	tbl.DELETED_AT = qx.NewTimeField("deleted_at", tbl.TableInfo)
	tbl.EVALUATEE = qx.NewNumberField("evaluatee", tbl.TableInfo)
	tbl.EVALUATION = qx.NewNumberField("evaluation", tbl.TableInfo)
	tbl.EVALUATOR = qx.NewNumberField("evaluator", tbl.TableInfo)
	tbl.OVERRIDE_OPEN = qx.NewBooleanField("override_open", tbl.TableInfo)
	tbl.SCHEMA = qx.NewNumberField("schema", tbl.TableInfo)
	tbl.SUBMITTED = qx.NewBooleanField("submitted", tbl.TableInfo)
	tbl.TESID = qx.NewNumberField("tesid", tbl.TableInfo)
	tbl.UPDATED_AT = qx.NewTimeField("updated_at", tbl.TableInfo)
	return tbl
}

func (tbl TABLE_TEAM_EVALUATE_SUBMISSION) As(alias string) TABLE_TEAM_EVALUATE_SUBMISSION {
	tbl2 := TEAM_EVALUATE_SUBMISSION()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type TABLE_TEAM_EVALUATE_TEAM struct {
	*qx.TableInfo
	EVALUATEE qx.NumberField
	EVALUATOR qx.NumberField
}

func TEAM_EVALUATE_TEAM() TABLE_TEAM_EVALUATE_TEAM {
	tbl := TABLE_TEAM_EVALUATE_TEAM{TableInfo: qx.NewTableInfo("public", "team_evaluate_team")}
	tbl.EVALUATEE = qx.NewNumberField("evaluatee", tbl.TableInfo)
	tbl.EVALUATOR = qx.NewNumberField("evaluator", tbl.TableInfo)
	return tbl
}

func (tbl TABLE_TEAM_EVALUATE_TEAM) As(alias string) TABLE_TEAM_EVALUATE_TEAM {
	tbl2 := TEAM_EVALUATE_TEAM()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type TABLE_TEAM_FEEDBACK_TEAM struct {
	*qx.TableInfo
	CREATED_AT    qx.TimeField
	DATA          qx.JSONField
	DELETED_AT    qx.TimeField
	EVALUATEE     qx.NumberField
	EVALUATION    qx.NumberField
	EVALUATOR     qx.NumberField
	OVERRIDE_OPEN qx.BooleanField
	SCHEMA        qx.NumberField
	SUBMITTED     qx.BooleanField
	TFTID         qx.NumberField
	UPDATED_AT    qx.TimeField
}

func TEAM_FEEDBACK_TEAM() TABLE_TEAM_FEEDBACK_TEAM {
	tbl := TABLE_TEAM_FEEDBACK_TEAM{TableInfo: qx.NewTableInfo("public", "team_feedback_team")}
	tbl.CREATED_AT = qx.NewTimeField("created_at", tbl.TableInfo)
	tbl.DATA = qx.NewJSONField("data", tbl.TableInfo)
	tbl.DELETED_AT = qx.NewTimeField("deleted_at", tbl.TableInfo)
	tbl.EVALUATEE = qx.NewNumberField("evaluatee", tbl.TableInfo)
	tbl.EVALUATION = qx.NewNumberField("evaluation", tbl.TableInfo)
	tbl.EVALUATOR = qx.NewNumberField("evaluator", tbl.TableInfo)
	tbl.OVERRIDE_OPEN = qx.NewBooleanField("override_open", tbl.TableInfo)
	tbl.SCHEMA = qx.NewNumberField("schema", tbl.TableInfo)
	tbl.SUBMITTED = qx.NewBooleanField("submitted", tbl.TableInfo)
	tbl.TFTID = qx.NewNumberField("tftid", tbl.TableInfo)
	tbl.UPDATED_AT = qx.NewTimeField("updated_at", tbl.TableInfo)
	return tbl
}

func (tbl TABLE_TEAM_FEEDBACK_TEAM) As(alias string) TABLE_TEAM_FEEDBACK_TEAM {
	tbl2 := TEAM_FEEDBACK_TEAM()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type TABLE_TEAM_FEEDBACK_USER struct {
	*qx.TableInfo
	CREATED_AT    qx.TimeField
	DATA          qx.JSONField
	DELETED_AT    qx.TimeField
	EVALUATEE     qx.NumberField
	EVALUATION    qx.NumberField
	EVALUATOR     qx.NumberField
	OVERRIDE_OPEN qx.BooleanField
	SCHEMA        qx.NumberField
	SUBMITTED     qx.BooleanField
	TFUID         qx.NumberField
	UPDATED_AT    qx.TimeField
}

func TEAM_FEEDBACK_USER() TABLE_TEAM_FEEDBACK_USER {
	tbl := TABLE_TEAM_FEEDBACK_USER{TableInfo: qx.NewTableInfo("public", "team_feedback_user")}
	tbl.CREATED_AT = qx.NewTimeField("created_at", tbl.TableInfo)
	tbl.DATA = qx.NewJSONField("data", tbl.TableInfo)
	tbl.DELETED_AT = qx.NewTimeField("deleted_at", tbl.TableInfo)
	tbl.EVALUATEE = qx.NewNumberField("evaluatee", tbl.TableInfo)
	tbl.EVALUATION = qx.NewNumberField("evaluation", tbl.TableInfo)
	tbl.EVALUATOR = qx.NewNumberField("evaluator", tbl.TableInfo)
	tbl.OVERRIDE_OPEN = qx.NewBooleanField("override_open", tbl.TableInfo)
	tbl.SCHEMA = qx.NewNumberField("schema", tbl.TableInfo)
	tbl.SUBMITTED = qx.NewBooleanField("submitted", tbl.TableInfo)
	tbl.TFUID = qx.NewNumberField("tfuid", tbl.TableInfo)
	tbl.UPDATED_AT = qx.NewTimeField("updated_at", tbl.TableInfo)
	return tbl
}

func (tbl TABLE_TEAM_FEEDBACK_USER) As(alias string) TABLE_TEAM_FEEDBACK_USER {
	tbl2 := TEAM_FEEDBACK_USER()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type TABLE_TEAM_SUBMISSION_CATEGORIES struct {
	*qx.TableInfo
	CATEGORY   qx.StringField
	SUBMISSION qx.NumberField
	TSCID      qx.NumberField
}

func TEAM_SUBMISSION_CATEGORIES() TABLE_TEAM_SUBMISSION_CATEGORIES {
	tbl := TABLE_TEAM_SUBMISSION_CATEGORIES{TableInfo: qx.NewTableInfo("public", "team_submission_categories")}
	tbl.CATEGORY = qx.NewStringField("category", tbl.TableInfo)
	tbl.SUBMISSION = qx.NewNumberField("submission", tbl.TableInfo)
	tbl.TSCID = qx.NewNumberField("tscid", tbl.TableInfo)
	return tbl
}

func (tbl TABLE_TEAM_SUBMISSION_CATEGORIES) As(alias string) TABLE_TEAM_SUBMISSION_CATEGORIES {
	tbl2 := TEAM_SUBMISSION_CATEGORIES()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type TABLE_TEAM_SUBMISSIONS struct {
	*qx.TableInfo
	CREATED_AT    qx.TimeField
	DATA          qx.JSONField
	DELETED_AT    qx.TimeField
	OVERRIDE_OPEN qx.BooleanField
	POSTER        qx.StringField
	README        qx.StringField
	SCHEMA        qx.NumberField
	SUBMITTED     qx.BooleanField
	TEAM          qx.NumberField
	TSID          qx.NumberField
	UPDATED_AT    qx.TimeField
	VIDEO         qx.StringField
}

func TEAM_SUBMISSIONS() TABLE_TEAM_SUBMISSIONS {
	tbl := TABLE_TEAM_SUBMISSIONS{TableInfo: qx.NewTableInfo("public", "team_submissions")}
	tbl.CREATED_AT = qx.NewTimeField("created_at", tbl.TableInfo)
	tbl.DATA = qx.NewJSONField("data", tbl.TableInfo)
	tbl.DELETED_AT = qx.NewTimeField("deleted_at", tbl.TableInfo)
	tbl.OVERRIDE_OPEN = qx.NewBooleanField("override_open", tbl.TableInfo)
	tbl.POSTER = qx.NewStringField("poster", tbl.TableInfo)
	tbl.README = qx.NewStringField("readme", tbl.TableInfo)
	tbl.SCHEMA = qx.NewNumberField("schema", tbl.TableInfo)
	tbl.SUBMITTED = qx.NewBooleanField("submitted", tbl.TableInfo)
	tbl.TEAM = qx.NewNumberField("team", tbl.TableInfo)
	tbl.TSID = qx.NewNumberField("tsid", tbl.TableInfo)
	tbl.UPDATED_AT = qx.NewTimeField("updated_at", tbl.TableInfo)
	tbl.VIDEO = qx.NewStringField("video", tbl.TableInfo)
	return tbl
}

func (tbl TABLE_TEAM_SUBMISSIONS) As(alias string) TABLE_TEAM_SUBMISSIONS {
	tbl2 := TEAM_SUBMISSIONS()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type TABLE_TEAMS struct {
	*qx.TableInfo
	ADVISER       qx.NumberField
	COHORT        qx.StringField
	CREATED_AT    qx.TimeField
	DATA          qx.JSONField
	DELETED_AT    qx.TimeField
	MENTOR        qx.NumberField
	PROJECT_IDEA  qx.StringField
	PROJECT_LEVEL qx.StringField
	STATUS        qx.StringField
	TEAM_NAME     qx.StringField
	TID           qx.NumberField
	UPDATED_AT    qx.TimeField
}

func TEAMS() TABLE_TEAMS {
	tbl := TABLE_TEAMS{TableInfo: qx.NewTableInfo("public", "teams")}
	tbl.ADVISER = qx.NewNumberField("adviser", tbl.TableInfo)
	tbl.COHORT = qx.NewStringField("cohort", tbl.TableInfo)
	tbl.CREATED_AT = qx.NewTimeField("created_at", tbl.TableInfo)
	tbl.DATA = qx.NewJSONField("data", tbl.TableInfo)
	tbl.DELETED_AT = qx.NewTimeField("deleted_at", tbl.TableInfo)
	tbl.MENTOR = qx.NewNumberField("mentor", tbl.TableInfo)
	tbl.PROJECT_IDEA = qx.NewStringField("project_idea", tbl.TableInfo)
	tbl.PROJECT_LEVEL = qx.NewStringField("project_level", tbl.TableInfo)
	tbl.STATUS = qx.NewStringField("status", tbl.TableInfo)
	tbl.TEAM_NAME = qx.NewStringField("team_name", tbl.TableInfo)
	tbl.TID = qx.NewNumberField("tid", tbl.TableInfo)
	tbl.UPDATED_AT = qx.NewTimeField("updated_at", tbl.TableInfo)
	return tbl
}

func (tbl TABLE_TEAMS) As(alias string) TABLE_TEAMS {
	tbl2 := TEAMS()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type TABLE_TEAMS_STATUS_ENUM struct {
	*qx.TableInfo
	STATUS qx.StringField
}

func TEAMS_STATUS_ENUM() TABLE_TEAMS_STATUS_ENUM {
	tbl := TABLE_TEAMS_STATUS_ENUM{TableInfo: qx.NewTableInfo("public", "teams_status_enum")}
	tbl.STATUS = qx.NewStringField("status", tbl.TableInfo)
	return tbl
}

func (tbl TABLE_TEAMS_STATUS_ENUM) As(alias string) TABLE_TEAMS_STATUS_ENUM {
	tbl2 := TEAMS_STATUS_ENUM()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type TABLE_USER_EVALUATE_SUBMISSION struct {
	*qx.TableInfo
	CREATED_AT    qx.TimeField
	DATA          qx.JSONField
	DELETED_AT    qx.TimeField
	EVALUATEE     qx.NumberField
	EVALUATION    qx.NumberField
	EVALUATOR     qx.NumberField
	OVERRIDE_OPEN qx.BooleanField
	SCHEMA        qx.NumberField
	SUBMITTED     qx.BooleanField
	UESID         qx.NumberField
	UPDATED_AT    qx.TimeField
}

func USER_EVALUATE_SUBMISSION() TABLE_USER_EVALUATE_SUBMISSION {
	tbl := TABLE_USER_EVALUATE_SUBMISSION{TableInfo: qx.NewTableInfo("public", "user_evaluate_submission")}
	tbl.CREATED_AT = qx.NewTimeField("created_at", tbl.TableInfo)
	tbl.DATA = qx.NewJSONField("data", tbl.TableInfo)
	tbl.DELETED_AT = qx.NewTimeField("deleted_at", tbl.TableInfo)
	tbl.EVALUATEE = qx.NewNumberField("evaluatee", tbl.TableInfo)
	tbl.EVALUATION = qx.NewNumberField("evaluation", tbl.TableInfo)
	tbl.EVALUATOR = qx.NewNumberField("evaluator", tbl.TableInfo)
	tbl.OVERRIDE_OPEN = qx.NewBooleanField("override_open", tbl.TableInfo)
	tbl.SCHEMA = qx.NewNumberField("schema", tbl.TableInfo)
	tbl.SUBMITTED = qx.NewBooleanField("submitted", tbl.TableInfo)
	tbl.UESID = qx.NewNumberField("uesid", tbl.TableInfo)
	tbl.UPDATED_AT = qx.NewTimeField("updated_at", tbl.TableInfo)
	return tbl
}

func (tbl TABLE_USER_EVALUATE_SUBMISSION) As(alias string) TABLE_USER_EVALUATE_SUBMISSION {
	tbl2 := USER_EVALUATE_SUBMISSION()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type TABLE_USER_ROLES struct {
	*qx.TableInfo
	COHORT     qx.StringField
	CREATED_AT qx.TimeField
	DELETED_AT qx.TimeField
	ROLE       qx.StringField
	UID        qx.NumberField
	UPDATED_AT qx.TimeField
	URID       qx.NumberField
}

func USER_ROLES() TABLE_USER_ROLES {
	tbl := TABLE_USER_ROLES{TableInfo: qx.NewTableInfo("public", "user_roles")}
	tbl.COHORT = qx.NewStringField("cohort", tbl.TableInfo)
	tbl.CREATED_AT = qx.NewTimeField("created_at", tbl.TableInfo)
	tbl.DELETED_AT = qx.NewTimeField("deleted_at", tbl.TableInfo)
	tbl.ROLE = qx.NewStringField("role", tbl.TableInfo)
	tbl.UID = qx.NewNumberField("uid", tbl.TableInfo)
	tbl.UPDATED_AT = qx.NewTimeField("updated_at", tbl.TableInfo)
	tbl.URID = qx.NewNumberField("urid", tbl.TableInfo)
	return tbl
}

func (tbl TABLE_USER_ROLES) As(alias string) TABLE_USER_ROLES {
	tbl2 := USER_ROLES()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type TABLE_USER_ROLES_APPLICANTS struct {
	*qx.TableInfo
	APPLICATION qx.NumberField
	DATA        qx.JSONField
	SCHEMA      qx.NumberField
	URID        qx.NumberField
}

func USER_ROLES_APPLICANTS() TABLE_USER_ROLES_APPLICANTS {
	tbl := TABLE_USER_ROLES_APPLICANTS{TableInfo: qx.NewTableInfo("public", "user_roles_applicants")}
	tbl.APPLICATION = qx.NewNumberField("application", tbl.TableInfo)
	tbl.DATA = qx.NewJSONField("data", tbl.TableInfo)
	tbl.SCHEMA = qx.NewNumberField("schema", tbl.TableInfo)
	tbl.URID = qx.NewNumberField("urid", tbl.TableInfo)
	return tbl
}

func (tbl TABLE_USER_ROLES_APPLICANTS) As(alias string) TABLE_USER_ROLES_APPLICANTS {
	tbl2 := USER_ROLES_APPLICANTS()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type TABLE_USER_ROLES_STUDENTS struct {
	*qx.TableInfo
	DATA qx.JSONField
	TEAM qx.NumberField
	URID qx.NumberField
}

func USER_ROLES_STUDENTS() TABLE_USER_ROLES_STUDENTS {
	tbl := TABLE_USER_ROLES_STUDENTS{TableInfo: qx.NewTableInfo("public", "user_roles_students")}
	tbl.DATA = qx.NewJSONField("data", tbl.TableInfo)
	tbl.TEAM = qx.NewNumberField("team", tbl.TableInfo)
	tbl.URID = qx.NewNumberField("urid", tbl.TableInfo)
	return tbl
}

func (tbl TABLE_USER_ROLES_STUDENTS) As(alias string) TABLE_USER_ROLES_STUDENTS {
	tbl2 := USER_ROLES_STUDENTS()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type TABLE_USERS struct {
	*qx.TableInfo
	DISPLAYNAME qx.StringField
	EMAIL       qx.StringField
	PASSWORD    qx.StringField
	UID         qx.NumberField
}

func USERS() TABLE_USERS {
	tbl := TABLE_USERS{TableInfo: qx.NewTableInfo("public", "users")}
	tbl.DISPLAYNAME = qx.NewStringField("displayname", tbl.TableInfo)
	tbl.EMAIL = qx.NewStringField("email", tbl.TableInfo)
	tbl.PASSWORD = qx.NewStringField("password", tbl.TableInfo)
	tbl.UID = qx.NewNumberField("uid", tbl.TableInfo)
	return tbl
}

func (tbl TABLE_USERS) As(alias string) TABLE_USERS {
	tbl2 := USERS()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type VIEW_FUNCS struct {
	*qx.TableInfo
	ARGTYPES qx.StringField
	NAME     qx.StringField
	RESTYPE  qx.StringField
	SCHEMA   qx.StringField
}

func FUNCS() VIEW_FUNCS {
	tbl := VIEW_FUNCS{TableInfo: qx.NewTableInfo("public", "funcs")}
	tbl.ARGTYPES = qx.NewStringField("argtypes", tbl.TableInfo)
	tbl.NAME = qx.NewStringField("name", tbl.TableInfo)
	tbl.RESTYPE = qx.NewStringField("restype", tbl.TableInfo)
	tbl.SCHEMA = qx.NewStringField("schema", tbl.TableInfo)
	return tbl
}

func (tbl VIEW_FUNCS) As(alias string) VIEW_FUNCS {
	tbl2 := FUNCS()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type VIEW_FUNCSS struct {
	*qx.TableInfo
	ARGTYPES qx.StringField
	CODE     qx.StringField
	NAME     qx.StringField
	RESTYPE  qx.StringField
	SCHEMA   qx.StringField
}

func FUNCSS() VIEW_FUNCSS {
	tbl := VIEW_FUNCSS{TableInfo: qx.NewTableInfo("public", "funcss")}
	tbl.ARGTYPES = qx.NewStringField("argtypes", tbl.TableInfo)
	tbl.CODE = qx.NewStringField("code", tbl.TableInfo)
	tbl.NAME = qx.NewStringField("name", tbl.TableInfo)
	tbl.RESTYPE = qx.NewStringField("restype", tbl.TableInfo)
	tbl.SCHEMA = qx.NewStringField("schema", tbl.TableInfo)
	return tbl
}

func (tbl VIEW_FUNCSS) As(alias string) VIEW_FUNCSS {
	tbl2 := FUNCSS()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type VIEW_PG_ALL_FOREIGN_KEYS struct {
	*qx.TableInfo
	FK_CONSTRAINT_NAME qx.StringField
	FK_SCHEMA_NAME     qx.StringField
	FK_TABLE_NAME      qx.StringField
	FK_TABLE_OID       qx.NumberField
	IS_DEFERRABLE      qx.BooleanField
	IS_DEFERRED        qx.BooleanField
	MATCH_TYPE         qx.StringField
	ON_DELETE          qx.StringField
	ON_UPDATE          qx.StringField
	PK_CONSTRAINT_NAME qx.StringField
	PK_INDEX_NAME      qx.StringField
	PK_SCHEMA_NAME     qx.StringField
	PK_TABLE_NAME      qx.StringField
	PK_TABLE_OID       qx.NumberField
}

func PG_ALL_FOREIGN_KEYS() VIEW_PG_ALL_FOREIGN_KEYS {
	tbl := VIEW_PG_ALL_FOREIGN_KEYS{TableInfo: qx.NewTableInfo("public", "pg_all_foreign_keys")}
	tbl.FK_CONSTRAINT_NAME = qx.NewStringField("fk_constraint_name", tbl.TableInfo)
	tbl.FK_SCHEMA_NAME = qx.NewStringField("fk_schema_name", tbl.TableInfo)
	tbl.FK_TABLE_NAME = qx.NewStringField("fk_table_name", tbl.TableInfo)
	tbl.FK_TABLE_OID = qx.NewNumberField("fk_table_oid", tbl.TableInfo)
	tbl.IS_DEFERRABLE = qx.NewBooleanField("is_deferrable", tbl.TableInfo)
	tbl.IS_DEFERRED = qx.NewBooleanField("is_deferred", tbl.TableInfo)
	tbl.MATCH_TYPE = qx.NewStringField("match_type", tbl.TableInfo)
	tbl.ON_DELETE = qx.NewStringField("on_delete", tbl.TableInfo)
	tbl.ON_UPDATE = qx.NewStringField("on_update", tbl.TableInfo)
	tbl.PK_CONSTRAINT_NAME = qx.NewStringField("pk_constraint_name", tbl.TableInfo)
	tbl.PK_INDEX_NAME = qx.NewStringField("pk_index_name", tbl.TableInfo)
	tbl.PK_SCHEMA_NAME = qx.NewStringField("pk_schema_name", tbl.TableInfo)
	tbl.PK_TABLE_NAME = qx.NewStringField("pk_table_name", tbl.TableInfo)
	tbl.PK_TABLE_OID = qx.NewNumberField("pk_table_oid", tbl.TableInfo)
	return tbl
}

func (tbl VIEW_PG_ALL_FOREIGN_KEYS) As(alias string) VIEW_PG_ALL_FOREIGN_KEYS {
	tbl2 := PG_ALL_FOREIGN_KEYS()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type VIEW_TAP_FUNKY struct {
	*qx.TableInfo
	ARGS        qx.StringField
	IS_DEFINER  qx.BooleanField
	IS_STRICT   qx.BooleanField
	IS_VISIBLE  qx.BooleanField
	LANGOID     qx.NumberField
	NAME        qx.StringField
	OID         qx.NumberField
	OWNER       qx.StringField
	RETURNS     qx.StringField
	RETURNS_SET qx.BooleanField
	SCHEMA      qx.StringField
	VOLATILITY  qx.StringField
}

func TAP_FUNKY() VIEW_TAP_FUNKY {
	tbl := VIEW_TAP_FUNKY{TableInfo: qx.NewTableInfo("public", "tap_funky")}
	tbl.ARGS = qx.NewStringField("args", tbl.TableInfo)
	tbl.IS_DEFINER = qx.NewBooleanField("is_definer", tbl.TableInfo)
	tbl.IS_STRICT = qx.NewBooleanField("is_strict", tbl.TableInfo)
	tbl.IS_VISIBLE = qx.NewBooleanField("is_visible", tbl.TableInfo)
	tbl.LANGOID = qx.NewNumberField("langoid", tbl.TableInfo)
	tbl.NAME = qx.NewStringField("name", tbl.TableInfo)
	tbl.OID = qx.NewNumberField("oid", tbl.TableInfo)
	tbl.OWNER = qx.NewStringField("owner", tbl.TableInfo)
	tbl.RETURNS = qx.NewStringField("returns", tbl.TableInfo)
	tbl.RETURNS_SET = qx.NewBooleanField("returns_set", tbl.TableInfo)
	tbl.SCHEMA = qx.NewStringField("schema", tbl.TableInfo)
	tbl.VOLATILITY = qx.NewStringField("volatility", tbl.TableInfo)
	return tbl
}

func (tbl VIEW_TAP_FUNKY) As(alias string) VIEW_TAP_FUNKY {
	tbl2 := TAP_FUNKY()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type VIEW_VIEWS struct {
	*qx.TableInfo
	NAME   qx.StringField
	SCHEMA qx.StringField
}

func VIEWS() VIEW_VIEWS {
	tbl := VIEW_VIEWS{TableInfo: qx.NewTableInfo("public", "views")}
	tbl.NAME = qx.NewStringField("name", tbl.TableInfo)
	tbl.SCHEMA = qx.NewStringField("schema", tbl.TableInfo)
	return tbl
}

func (tbl VIEW_VIEWS) As(alias string) VIEW_VIEWS {
	tbl2 := VIEWS()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type VIEW_VIEWSS struct {
	*qx.TableInfo
	CODE   qx.StringField
	NAME   qx.StringField
	SCHEMA qx.StringField
}

func VIEWSS() VIEW_VIEWSS {
	tbl := VIEW_VIEWSS{TableInfo: qx.NewTableInfo("public", "viewss")}
	tbl.CODE = qx.NewStringField("code", tbl.TableInfo)
	tbl.NAME = qx.NewStringField("name", tbl.TableInfo)
	tbl.SCHEMA = qx.NewStringField("schema", tbl.TableInfo)
	return tbl
}

func (tbl VIEW_VIEWSS) As(alias string) VIEW_VIEWSS {
	tbl2 := VIEWSS()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type VIEW_APP__V_ADVISER_EVALUATIONS struct {
	*qx.TableInfo
	COHORT                   qx.StringField
	EVALUATEE_PROJECT_LEVEL  qx.StringField
	EVALUATEE_TEAM_NAME      qx.StringField
	EVALUATEE_TID            qx.NumberField
	EVALUATION_ANSWERS       qx.JSONField
	EVALUATION_END_AT        qx.TimeField
	EVALUATION_OVERRIDE_OPEN qx.BooleanField
	EVALUATION_QUESTIONS     qx.JSONField
	EVALUATION_START_AT      qx.TimeField
	EVALUATION_SUBMITTED     qx.BooleanField
	EVALUATION_UPDATED_AT    qx.TimeField
	EVALUATOR_DISPLAYNAME    qx.StringField
	EVALUATOR_URID           qx.NumberField
	MILESTONE                qx.StringField
	SUBMISSION_ANSWERS       qx.JSONField
	SUBMISSION_END_AT        qx.TimeField
	SUBMISSION_OVERRIDE_OPEN qx.BooleanField
	SUBMISSION_QUESTIONS     qx.JSONField
	SUBMISSION_START_AT      qx.TimeField
	SUBMISSION_SUBMITTED     qx.BooleanField
	SUBMISSION_UPDATED_AT    qx.TimeField
	TSID                     qx.NumberField
	UESID                    qx.NumberField
}

func APP__V_ADVISER_EVALUATIONS() VIEW_APP__V_ADVISER_EVALUATIONS {
	tbl := VIEW_APP__V_ADVISER_EVALUATIONS{TableInfo: qx.NewTableInfo("app", "v_adviser_evaluations")}
	tbl.COHORT = qx.NewStringField("cohort", tbl.TableInfo)
	tbl.EVALUATEE_PROJECT_LEVEL = qx.NewStringField("evaluatee_project_level", tbl.TableInfo)
	tbl.EVALUATEE_TEAM_NAME = qx.NewStringField("evaluatee_team_name", tbl.TableInfo)
	tbl.EVALUATEE_TID = qx.NewNumberField("evaluatee_tid", tbl.TableInfo)
	tbl.EVALUATION_ANSWERS = qx.NewJSONField("evaluation_answers", tbl.TableInfo)
	tbl.EVALUATION_END_AT = qx.NewTimeField("evaluation_end_at", tbl.TableInfo)
	tbl.EVALUATION_OVERRIDE_OPEN = qx.NewBooleanField("evaluation_override_open", tbl.TableInfo)
	tbl.EVALUATION_QUESTIONS = qx.NewJSONField("evaluation_questions", tbl.TableInfo)
	tbl.EVALUATION_START_AT = qx.NewTimeField("evaluation_start_at", tbl.TableInfo)
	tbl.EVALUATION_SUBMITTED = qx.NewBooleanField("evaluation_submitted", tbl.TableInfo)
	tbl.EVALUATION_UPDATED_AT = qx.NewTimeField("evaluation_updated_at", tbl.TableInfo)
	tbl.EVALUATOR_DISPLAYNAME = qx.NewStringField("evaluator_displayname", tbl.TableInfo)
	tbl.EVALUATOR_URID = qx.NewNumberField("evaluator_urid", tbl.TableInfo)
	tbl.MILESTONE = qx.NewStringField("milestone", tbl.TableInfo)
	tbl.SUBMISSION_ANSWERS = qx.NewJSONField("submission_answers", tbl.TableInfo)
	tbl.SUBMISSION_END_AT = qx.NewTimeField("submission_end_at", tbl.TableInfo)
	tbl.SUBMISSION_OVERRIDE_OPEN = qx.NewBooleanField("submission_override_open", tbl.TableInfo)
	tbl.SUBMISSION_QUESTIONS = qx.NewJSONField("submission_questions", tbl.TableInfo)
	tbl.SUBMISSION_START_AT = qx.NewTimeField("submission_start_at", tbl.TableInfo)
	tbl.SUBMISSION_SUBMITTED = qx.NewBooleanField("submission_submitted", tbl.TableInfo)
	tbl.SUBMISSION_UPDATED_AT = qx.NewTimeField("submission_updated_at", tbl.TableInfo)
	tbl.TSID = qx.NewNumberField("tsid", tbl.TableInfo)
	tbl.UESID = qx.NewNumberField("uesid", tbl.TableInfo)
	return tbl
}

func (tbl VIEW_APP__V_ADVISER_EVALUATIONS) As(alias string) VIEW_APP__V_ADVISER_EVALUATIONS {
	tbl2 := APP__V_ADVISER_EVALUATIONS()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type VIEW_APP__V_APPLICATIONS struct {
	*qx.TableInfo
	APN_ANSWERS      qx.JSONField
	APNID            qx.NumberField
	APT1_ANSWERS     qx.JSONField
	APT1_DISPLAYNAME qx.StringField
	APT1_EMAIL       qx.StringField
	APT1_UID         qx.NumberField
	APT1_URID        qx.NumberField
	APT2_ANSWERS     qx.JSONField
	APT2_DISPLAYNAME qx.StringField
	APT2_EMAIL       qx.StringField
	APT2_UID         qx.NumberField
	APT2_URID        qx.NumberField
	COHORT           qx.StringField
	CREATED_AT       qx.TimeField
	CREATOR          qx.NumberField
	DELETED_AT       qx.TimeField
	MAGICSTRING      qx.StringField
	PROJECT_LEVEL    qx.StringField
	STATUS           qx.StringField
	SUBMITTED        qx.BooleanField
	UPDATED_AT       qx.TimeField
}

func APP__V_APPLICATIONS() VIEW_APP__V_APPLICATIONS {
	tbl := VIEW_APP__V_APPLICATIONS{TableInfo: qx.NewTableInfo("app", "v_applications")}
	tbl.APN_ANSWERS = qx.NewJSONField("apn_answers", tbl.TableInfo)
	tbl.APNID = qx.NewNumberField("apnid", tbl.TableInfo)
	tbl.APT1_ANSWERS = qx.NewJSONField("apt1_answers", tbl.TableInfo)
	tbl.APT1_DISPLAYNAME = qx.NewStringField("apt1_displayname", tbl.TableInfo)
	tbl.APT1_EMAIL = qx.NewStringField("apt1_email", tbl.TableInfo)
	tbl.APT1_UID = qx.NewNumberField("apt1_uid", tbl.TableInfo)
	tbl.APT1_URID = qx.NewNumberField("apt1_urid", tbl.TableInfo)
	tbl.APT2_ANSWERS = qx.NewJSONField("apt2_answers", tbl.TableInfo)
	tbl.APT2_DISPLAYNAME = qx.NewStringField("apt2_displayname", tbl.TableInfo)
	tbl.APT2_EMAIL = qx.NewStringField("apt2_email", tbl.TableInfo)
	tbl.APT2_UID = qx.NewNumberField("apt2_uid", tbl.TableInfo)
	tbl.APT2_URID = qx.NewNumberField("apt2_urid", tbl.TableInfo)
	tbl.COHORT = qx.NewStringField("cohort", tbl.TableInfo)
	tbl.CREATED_AT = qx.NewTimeField("created_at", tbl.TableInfo)
	tbl.CREATOR = qx.NewNumberField("creator", tbl.TableInfo)
	tbl.DELETED_AT = qx.NewTimeField("deleted_at", tbl.TableInfo)
	tbl.MAGICSTRING = qx.NewStringField("magicstring", tbl.TableInfo)
	tbl.PROJECT_LEVEL = qx.NewStringField("project_level", tbl.TableInfo)
	tbl.STATUS = qx.NewStringField("status", tbl.TableInfo)
	tbl.SUBMITTED = qx.NewBooleanField("submitted", tbl.TableInfo)
	tbl.UPDATED_AT = qx.NewTimeField("updated_at", tbl.TableInfo)
	return tbl
}

func (tbl VIEW_APP__V_APPLICATIONS) As(alias string) VIEW_APP__V_APPLICATIONS {
	tbl2 := APP__V_APPLICATIONS()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type VIEW_APP__V_APPLICATIONS_V2 struct {
	*qx.TableInfo
	APNID                   qx.NumberField
	APPLICANT1_DISPLAYNAME  qx.StringField
	APPLICANT1_EMAIL        qx.StringField
	APPLICANT1_FORM_DATA    qx.JSONField
	APPLICANT1_UID          qx.NumberField
	APPLICANT1_URID         qx.NumberField
	APPLICANT2_DISPLAYNAME  qx.StringField
	APPLICANT2_EMAIL        qx.StringField
	APPLICANT2_UID          qx.NumberField
	APPLICANT2_URID         qx.NumberField
	APPLICANT_FORM_SCHEMA   qx.JSONField
	APPLICANT_FSID          qx.NumberField
	APPLICATION_FORM_DATA   qx.JSONField
	APPLICATION_FORM_SCHEMA qx.JSONField
	APPLICATION_FSID        qx.NumberField
	COHORT                  qx.StringField
	CREATOR                 qx.NumberField
	MAGICSTRING             qx.StringField
	PROJECT_LEVEL           qx.StringField
	STATUS                  qx.StringField
	SUBMITTED               qx.BooleanField
}

func APP__V_APPLICATIONS_V2() VIEW_APP__V_APPLICATIONS_V2 {
	tbl := VIEW_APP__V_APPLICATIONS_V2{TableInfo: qx.NewTableInfo("app", "v_applications_v2")}
	tbl.APNID = qx.NewNumberField("apnid", tbl.TableInfo)
	tbl.APPLICANT1_DISPLAYNAME = qx.NewStringField("applicant1_displayname", tbl.TableInfo)
	tbl.APPLICANT1_EMAIL = qx.NewStringField("applicant1_email", tbl.TableInfo)
	tbl.APPLICANT1_FORM_DATA = qx.NewJSONField("applicant1_form_data", tbl.TableInfo)
	tbl.APPLICANT1_UID = qx.NewNumberField("applicant1_uid", tbl.TableInfo)
	tbl.APPLICANT1_URID = qx.NewNumberField("applicant1_urid", tbl.TableInfo)
	tbl.APPLICANT2_DISPLAYNAME = qx.NewStringField("applicant2_displayname", tbl.TableInfo)
	tbl.APPLICANT2_EMAIL = qx.NewStringField("applicant2_email", tbl.TableInfo)
	tbl.APPLICANT2_UID = qx.NewNumberField("applicant2_uid", tbl.TableInfo)
	tbl.APPLICANT2_URID = qx.NewNumberField("applicant2_urid", tbl.TableInfo)
	tbl.APPLICANT_FORM_SCHEMA = qx.NewJSONField("applicant_form_schema", tbl.TableInfo)
	tbl.APPLICANT_FSID = qx.NewNumberField("applicant_fsid", tbl.TableInfo)
	tbl.APPLICATION_FORM_DATA = qx.NewJSONField("application_form_data", tbl.TableInfo)
	tbl.APPLICATION_FORM_SCHEMA = qx.NewJSONField("application_form_schema", tbl.TableInfo)
	tbl.APPLICATION_FSID = qx.NewNumberField("application_fsid", tbl.TableInfo)
	tbl.COHORT = qx.NewStringField("cohort", tbl.TableInfo)
	tbl.CREATOR = qx.NewNumberField("creator", tbl.TableInfo)
	tbl.MAGICSTRING = qx.NewStringField("magicstring", tbl.TableInfo)
	tbl.PROJECT_LEVEL = qx.NewStringField("project_level", tbl.TableInfo)
	tbl.STATUS = qx.NewStringField("status", tbl.TableInfo)
	tbl.SUBMITTED = qx.NewBooleanField("submitted", tbl.TableInfo)
	return tbl
}

func (tbl VIEW_APP__V_APPLICATIONS_V2) As(alias string) VIEW_APP__V_APPLICATIONS_V2 {
	tbl2 := APP__V_APPLICATIONS_V2()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type VIEW_APP__V_MENTOR_EVALUATIONS struct {
	*qx.TableInfo
	COHORT                   qx.StringField
	EVALUATEE_TEAM_NAME      qx.StringField
	EVALUATEE_TID            qx.NumberField
	EVALUATION_ANSWERS       qx.JSONField
	EVALUATION_END_AT        qx.TimeField
	EVALUATION_OVERRIDE_OPEN qx.BooleanField
	EVALUATION_QUESTIONS     qx.JSONField
	EVALUATION_START_AT      qx.TimeField
	EVALUATION_SUBMITTED     qx.BooleanField
	EVALUATION_UPDATED_AT    qx.TimeField
	EVALUATOR_DISPLAYNAME    qx.StringField
	EVALUATOR_URID           qx.NumberField
	MILESTONE                qx.StringField
	SUBMISSION_ANSWERS       qx.JSONField
	SUBMISSION_END_AT        qx.TimeField
	SUBMISSION_OVERRIDE_OPEN qx.BooleanField
	SUBMISSION_QUESTIONS     qx.JSONField
	SUBMISSION_START_AT      qx.TimeField
	SUBMISSION_SUBMITTED     qx.BooleanField
	SUBMISSION_UPDATED_AT    qx.TimeField
	TSID                     qx.NumberField
	UESID                    qx.NumberField
}

func APP__V_MENTOR_EVALUATIONS() VIEW_APP__V_MENTOR_EVALUATIONS {
	tbl := VIEW_APP__V_MENTOR_EVALUATIONS{TableInfo: qx.NewTableInfo("app", "v_mentor_evaluations")}
	tbl.COHORT = qx.NewStringField("cohort", tbl.TableInfo)
	tbl.EVALUATEE_TEAM_NAME = qx.NewStringField("evaluatee_team_name", tbl.TableInfo)
	tbl.EVALUATEE_TID = qx.NewNumberField("evaluatee_tid", tbl.TableInfo)
	tbl.EVALUATION_ANSWERS = qx.NewJSONField("evaluation_answers", tbl.TableInfo)
	tbl.EVALUATION_END_AT = qx.NewTimeField("evaluation_end_at", tbl.TableInfo)
	tbl.EVALUATION_OVERRIDE_OPEN = qx.NewBooleanField("evaluation_override_open", tbl.TableInfo)
	tbl.EVALUATION_QUESTIONS = qx.NewJSONField("evaluation_questions", tbl.TableInfo)
	tbl.EVALUATION_START_AT = qx.NewTimeField("evaluation_start_at", tbl.TableInfo)
	tbl.EVALUATION_SUBMITTED = qx.NewBooleanField("evaluation_submitted", tbl.TableInfo)
	tbl.EVALUATION_UPDATED_AT = qx.NewTimeField("evaluation_updated_at", tbl.TableInfo)
	tbl.EVALUATOR_DISPLAYNAME = qx.NewStringField("evaluator_displayname", tbl.TableInfo)
	tbl.EVALUATOR_URID = qx.NewNumberField("evaluator_urid", tbl.TableInfo)
	tbl.MILESTONE = qx.NewStringField("milestone", tbl.TableInfo)
	tbl.SUBMISSION_ANSWERS = qx.NewJSONField("submission_answers", tbl.TableInfo)
	tbl.SUBMISSION_END_AT = qx.NewTimeField("submission_end_at", tbl.TableInfo)
	tbl.SUBMISSION_OVERRIDE_OPEN = qx.NewBooleanField("submission_override_open", tbl.TableInfo)
	tbl.SUBMISSION_QUESTIONS = qx.NewJSONField("submission_questions", tbl.TableInfo)
	tbl.SUBMISSION_START_AT = qx.NewTimeField("submission_start_at", tbl.TableInfo)
	tbl.SUBMISSION_SUBMITTED = qx.NewBooleanField("submission_submitted", tbl.TableInfo)
	tbl.SUBMISSION_UPDATED_AT = qx.NewTimeField("submission_updated_at", tbl.TableInfo)
	tbl.TSID = qx.NewNumberField("tsid", tbl.TableInfo)
	tbl.UESID = qx.NewNumberField("uesid", tbl.TableInfo)
	return tbl
}

func (tbl VIEW_APP__V_MENTOR_EVALUATIONS) As(alias string) VIEW_APP__V_MENTOR_EVALUATIONS {
	tbl2 := APP__V_MENTOR_EVALUATIONS()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type VIEW_APP__V_QUESTIONS struct {
	*qx.TableInfo
	COHORT             qx.StringField
	DATA               qx.JSONField
	END_AT             qx.TimeField
	FSID               qx.NumberField
	MILESTONE          qx.StringField
	MILESTONE_END_AT   qx.TimeField
	MILESTONE_START_AT qx.TimeField
	NAME               qx.StringField
	STAGE              qx.StringField
	START_AT           qx.TimeField
	SUBSECTION         qx.StringField
}

func APP__V_QUESTIONS() VIEW_APP__V_QUESTIONS {
	tbl := VIEW_APP__V_QUESTIONS{TableInfo: qx.NewTableInfo("app", "v_questions")}
	tbl.COHORT = qx.NewStringField("cohort", tbl.TableInfo)
	tbl.DATA = qx.NewJSONField("data", tbl.TableInfo)
	tbl.END_AT = qx.NewTimeField("end_at", tbl.TableInfo)
	tbl.FSID = qx.NewNumberField("fsid", tbl.TableInfo)
	tbl.MILESTONE = qx.NewStringField("milestone", tbl.TableInfo)
	tbl.MILESTONE_END_AT = qx.NewTimeField("milestone_end_at", tbl.TableInfo)
	tbl.MILESTONE_START_AT = qx.NewTimeField("milestone_start_at", tbl.TableInfo)
	tbl.NAME = qx.NewStringField("name", tbl.TableInfo)
	tbl.STAGE = qx.NewStringField("stage", tbl.TableInfo)
	tbl.START_AT = qx.NewTimeField("start_at", tbl.TableInfo)
	tbl.SUBSECTION = qx.NewStringField("subsection", tbl.TableInfo)
	return tbl
}

func (tbl VIEW_APP__V_QUESTIONS) As(alias string) VIEW_APP__V_QUESTIONS {
	tbl2 := APP__V_QUESTIONS()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type VIEW_APP__V_SESSIONS struct {
	*qx.TableInfo
	CREATED_AT  qx.TimeField
	DISPLAYNAME qx.StringField
	HASH        qx.StringField
	ROLE        qx.StringField
	UID         qx.NumberField
}

func APP__V_SESSIONS() VIEW_APP__V_SESSIONS {
	tbl := VIEW_APP__V_SESSIONS{TableInfo: qx.NewTableInfo("app", "v_sessions")}
	tbl.CREATED_AT = qx.NewTimeField("created_at", tbl.TableInfo)
	tbl.DISPLAYNAME = qx.NewStringField("displayname", tbl.TableInfo)
	tbl.HASH = qx.NewStringField("hash", tbl.TableInfo)
	tbl.ROLE = qx.NewStringField("role", tbl.TableInfo)
	tbl.UID = qx.NewNumberField("uid", tbl.TableInfo)
	return tbl
}

func (tbl VIEW_APP__V_SESSIONS) As(alias string) VIEW_APP__V_SESSIONS {
	tbl2 := APP__V_SESSIONS()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type VIEW_APP__V_SUBMISSIONS struct {
	*qx.TableInfo
	ANSWERS       qx.JSONField
	COHORT        qx.StringField
	END_AT        qx.TimeField
	MILESTONE     qx.StringField
	OVERRIDE_OPEN qx.BooleanField
	QUESTIONS     qx.JSONField
	START_AT      qx.TimeField
	SUBMITTED     qx.BooleanField
	TEAM_NAME     qx.StringField
	TID           qx.NumberField
	UPDATED_AT    qx.TimeField
}

func APP__V_SUBMISSIONS() VIEW_APP__V_SUBMISSIONS {
	tbl := VIEW_APP__V_SUBMISSIONS{TableInfo: qx.NewTableInfo("app", "v_submissions")}
	tbl.ANSWERS = qx.NewJSONField("answers", tbl.TableInfo)
	tbl.COHORT = qx.NewStringField("cohort", tbl.TableInfo)
	tbl.END_AT = qx.NewTimeField("end_at", tbl.TableInfo)
	tbl.MILESTONE = qx.NewStringField("milestone", tbl.TableInfo)
	tbl.OVERRIDE_OPEN = qx.NewBooleanField("override_open", tbl.TableInfo)
	tbl.QUESTIONS = qx.NewJSONField("questions", tbl.TableInfo)
	tbl.START_AT = qx.NewTimeField("start_at", tbl.TableInfo)
	tbl.SUBMITTED = qx.NewBooleanField("submitted", tbl.TableInfo)
	tbl.TEAM_NAME = qx.NewStringField("team_name", tbl.TableInfo)
	tbl.TID = qx.NewNumberField("tid", tbl.TableInfo)
	tbl.UPDATED_AT = qx.NewTimeField("updated_at", tbl.TableInfo)
	return tbl
}

func (tbl VIEW_APP__V_SUBMISSIONS) As(alias string) VIEW_APP__V_SUBMISSIONS {
	tbl2 := APP__V_SUBMISSIONS()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type VIEW_APP__V_TEAM_EVALUATIONS struct {
	*qx.TableInfo
	COHORT                   qx.StringField
	EVALUATEE_PROJECT_LEVEL  qx.StringField
	EVALUATEE_TEAM_NAME      qx.StringField
	EVALUATEE_TID            qx.NumberField
	EVALUATION_ANSWERS       qx.JSONField
	EVALUATION_END_AT        qx.TimeField
	EVALUATION_OVERRIDE_OPEN qx.BooleanField
	EVALUATION_QUESTIONS     qx.JSONField
	EVALUATION_START_AT      qx.TimeField
	EVALUATION_SUBMITTED     qx.BooleanField
	EVALUATION_UPDATED_AT    qx.TimeField
	EVALUATOR_PROJECT_LEVEL  qx.StringField
	EVALUATOR_TEAM_NAME      qx.StringField
	EVALUATOR_TID            qx.NumberField
	MILESTONE                qx.StringField
	STAGE                    qx.StringField
	SUBMISSION_ANSWERS       qx.JSONField
	SUBMISSION_END_AT        qx.TimeField
	SUBMISSION_OVERRIDE_OPEN qx.BooleanField
	SUBMISSION_QUESTIONS     qx.JSONField
	SUBMISSION_START_AT      qx.TimeField
	SUBMISSION_SUBMITTED     qx.BooleanField
	SUBMISSION_UPDATED_AT    qx.TimeField
	TESID                    qx.NumberField
	TSID                     qx.NumberField
}

func APP__V_TEAM_EVALUATIONS() VIEW_APP__V_TEAM_EVALUATIONS {
	tbl := VIEW_APP__V_TEAM_EVALUATIONS{TableInfo: qx.NewTableInfo("app", "v_team_evaluations")}
	tbl.COHORT = qx.NewStringField("cohort", tbl.TableInfo)
	tbl.EVALUATEE_PROJECT_LEVEL = qx.NewStringField("evaluatee_project_level", tbl.TableInfo)
	tbl.EVALUATEE_TEAM_NAME = qx.NewStringField("evaluatee_team_name", tbl.TableInfo)
	tbl.EVALUATEE_TID = qx.NewNumberField("evaluatee_tid", tbl.TableInfo)
	tbl.EVALUATION_ANSWERS = qx.NewJSONField("evaluation_answers", tbl.TableInfo)
	tbl.EVALUATION_END_AT = qx.NewTimeField("evaluation_end_at", tbl.TableInfo)
	tbl.EVALUATION_OVERRIDE_OPEN = qx.NewBooleanField("evaluation_override_open", tbl.TableInfo)
	tbl.EVALUATION_QUESTIONS = qx.NewJSONField("evaluation_questions", tbl.TableInfo)
	tbl.EVALUATION_START_AT = qx.NewTimeField("evaluation_start_at", tbl.TableInfo)
	tbl.EVALUATION_SUBMITTED = qx.NewBooleanField("evaluation_submitted", tbl.TableInfo)
	tbl.EVALUATION_UPDATED_AT = qx.NewTimeField("evaluation_updated_at", tbl.TableInfo)
	tbl.EVALUATOR_PROJECT_LEVEL = qx.NewStringField("evaluator_project_level", tbl.TableInfo)
	tbl.EVALUATOR_TEAM_NAME = qx.NewStringField("evaluator_team_name", tbl.TableInfo)
	tbl.EVALUATOR_TID = qx.NewNumberField("evaluator_tid", tbl.TableInfo)
	tbl.MILESTONE = qx.NewStringField("milestone", tbl.TableInfo)
	tbl.STAGE = qx.NewStringField("stage", tbl.TableInfo)
	tbl.SUBMISSION_ANSWERS = qx.NewJSONField("submission_answers", tbl.TableInfo)
	tbl.SUBMISSION_END_AT = qx.NewTimeField("submission_end_at", tbl.TableInfo)
	tbl.SUBMISSION_OVERRIDE_OPEN = qx.NewBooleanField("submission_override_open", tbl.TableInfo)
	tbl.SUBMISSION_QUESTIONS = qx.NewJSONField("submission_questions", tbl.TableInfo)
	tbl.SUBMISSION_START_AT = qx.NewTimeField("submission_start_at", tbl.TableInfo)
	tbl.SUBMISSION_SUBMITTED = qx.NewBooleanField("submission_submitted", tbl.TableInfo)
	tbl.SUBMISSION_UPDATED_AT = qx.NewTimeField("submission_updated_at", tbl.TableInfo)
	tbl.TESID = qx.NewNumberField("tesid", tbl.TableInfo)
	tbl.TSID = qx.NewNumberField("tsid", tbl.TableInfo)
	return tbl
}

func (tbl VIEW_APP__V_TEAM_EVALUATIONS) As(alias string) VIEW_APP__V_TEAM_EVALUATIONS {
	tbl2 := APP__V_TEAM_EVALUATIONS()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type VIEW_APP__V_TEAMS struct {
	*qx.TableInfo
	ADV_DISPLAYNAME  qx.StringField
	ADV_EMAIL        qx.StringField
	ADV_UID          qx.NumberField
	ADV_URID         qx.NumberField
	COHORT           qx.StringField
	CREATED_AT       qx.TimeField
	DELETED_AT       qx.TimeField
	MNT_DISPLAYNAME  qx.StringField
	MNT_EMAIL        qx.StringField
	MNT_UID          qx.NumberField
	MNT_URID         qx.NumberField
	PROJECT_LEVEL    qx.StringField
	STATUS           qx.StringField
	STU1_DATA        qx.JSONField
	STU1_DISPLAYNAME qx.StringField
	STU1_EMAIL       qx.StringField
	STU1_UID         qx.NumberField
	STU1_URID        qx.NumberField
	STU2_DATA        qx.JSONField
	STU2_DISPLAYNAME qx.StringField
	STU2_EMAIL       qx.StringField
	STU2_UID         qx.NumberField
	STU2_URID        qx.NumberField
	TEAM_DATA        qx.JSONField
	TEAM_NAME        qx.StringField
	TID              qx.NumberField
	UPDATED_AT       qx.TimeField
}

func APP__V_TEAMS() VIEW_APP__V_TEAMS {
	tbl := VIEW_APP__V_TEAMS{TableInfo: qx.NewTableInfo("app", "v_teams")}
	tbl.ADV_DISPLAYNAME = qx.NewStringField("adv_displayname", tbl.TableInfo)
	tbl.ADV_EMAIL = qx.NewStringField("adv_email", tbl.TableInfo)
	tbl.ADV_UID = qx.NewNumberField("adv_uid", tbl.TableInfo)
	tbl.ADV_URID = qx.NewNumberField("adv_urid", tbl.TableInfo)
	tbl.COHORT = qx.NewStringField("cohort", tbl.TableInfo)
	tbl.CREATED_AT = qx.NewTimeField("created_at", tbl.TableInfo)
	tbl.DELETED_AT = qx.NewTimeField("deleted_at", tbl.TableInfo)
	tbl.MNT_DISPLAYNAME = qx.NewStringField("mnt_displayname", tbl.TableInfo)
	tbl.MNT_EMAIL = qx.NewStringField("mnt_email", tbl.TableInfo)
	tbl.MNT_UID = qx.NewNumberField("mnt_uid", tbl.TableInfo)
	tbl.MNT_URID = qx.NewNumberField("mnt_urid", tbl.TableInfo)
	tbl.PROJECT_LEVEL = qx.NewStringField("project_level", tbl.TableInfo)
	tbl.STATUS = qx.NewStringField("status", tbl.TableInfo)
	tbl.STU1_DATA = qx.NewJSONField("stu1_data", tbl.TableInfo)
	tbl.STU1_DISPLAYNAME = qx.NewStringField("stu1_displayname", tbl.TableInfo)
	tbl.STU1_EMAIL = qx.NewStringField("stu1_email", tbl.TableInfo)
	tbl.STU1_UID = qx.NewNumberField("stu1_uid", tbl.TableInfo)
	tbl.STU1_URID = qx.NewNumberField("stu1_urid", tbl.TableInfo)
	tbl.STU2_DATA = qx.NewJSONField("stu2_data", tbl.TableInfo)
	tbl.STU2_DISPLAYNAME = qx.NewStringField("stu2_displayname", tbl.TableInfo)
	tbl.STU2_EMAIL = qx.NewStringField("stu2_email", tbl.TableInfo)
	tbl.STU2_UID = qx.NewNumberField("stu2_uid", tbl.TableInfo)
	tbl.STU2_URID = qx.NewNumberField("stu2_urid", tbl.TableInfo)
	tbl.TEAM_DATA = qx.NewJSONField("team_data", tbl.TableInfo)
	tbl.TEAM_NAME = qx.NewStringField("team_name", tbl.TableInfo)
	tbl.TID = qx.NewNumberField("tid", tbl.TableInfo)
	tbl.UPDATED_AT = qx.NewTimeField("updated_at", tbl.TableInfo)
	return tbl
}

func (tbl VIEW_APP__V_TEAMS) As(alias string) VIEW_APP__V_TEAMS {
	tbl2 := APP__V_TEAMS()
	tbl2.TableInfo.Alias = alias
	return tbl2
}

type VIEW_APP__V_TEAMS_AND_STUDENTS struct {
	*qx.TableInfo
	ADVISER          qx.NumberField
	MENTOR           qx.NumberField
	PROJECT_LEVEL    qx.StringField
	STU1_DISPLAYNAME qx.StringField
	STU2_DISPLAYNAME qx.StringField
	TEAM_NAME        qx.StringField
	TID              qx.NumberField
}

func APP__V_TEAMS_AND_STUDENTS() VIEW_APP__V_TEAMS_AND_STUDENTS {
	tbl := VIEW_APP__V_TEAMS_AND_STUDENTS{TableInfo: qx.NewTableInfo("app", "v_teams_and_students")}
	tbl.ADVISER = qx.NewNumberField("adviser", tbl.TableInfo)
	tbl.MENTOR = qx.NewNumberField("mentor", tbl.TableInfo)
	tbl.PROJECT_LEVEL = qx.NewStringField("project_level", tbl.TableInfo)
	tbl.STU1_DISPLAYNAME = qx.NewStringField("stu1_displayname", tbl.TableInfo)
	tbl.STU2_DISPLAYNAME = qx.NewStringField("stu2_displayname", tbl.TableInfo)
	tbl.TEAM_NAME = qx.NewStringField("team_name", tbl.TableInfo)
	tbl.TID = qx.NewNumberField("tid", tbl.TableInfo)
	return tbl
}

func (tbl VIEW_APP__V_TEAMS_AND_STUDENTS) As(alias string) VIEW_APP__V_TEAMS_AND_STUDENTS {
	tbl2 := APP__V_TEAMS_AND_STUDENTS()
	tbl2.TableInfo.Alias = alias
	return tbl2
}
